name: Deploy (dev)

on:
  push:
    branches: [dev, deploy-dev]

env:
  CARGO_TERM_COLOR: always
  CARGO_BUILD_ARGS: --release --verbose

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        service: [dispatcher, processor]
        include:
          - service: dispatcher
            package: wfinfo_dispatcher
            fa_name_var: DISPATCHER_FA_NAME
            fa_publish_profile_var: DISPATCHER_FA_PUBLISH_PROFILE
          - service: processor
            package: wfinfo_processor
            fa_name_var: PROCESSOR_FA_NAME
            fa_publish_profile_var: PROCESSOR_FA_PUBLISH_PROFILE
    env:
      SERVICE: ${{ matrix.service }}
      PACKAGE: ${{ matrix.package }}
      FA_NAME_VAR: ${{ matrix.fa_name_var }}
      FA_PUBLISH_PROFILE_VAR: ${{ matrix.fa_publish_profile_var }}
      FA_NAME: ${{ secrets[matrix.fa_name_var] }}
      FA_PUBLISH_PROFILE: ${{ secrets[matrix.fa_publish_profile_var] }}
      DISPATCHER_FA_NAME: ${{ secrets.DISPATCHER_FA_NAME }}
      PROCESSOR_FA_NAME: ${{ secrets.PROCESSOR_FA_NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install musl-gcc and dependencies
        run: |-
          sudo apt-get update
          sudo apt-get upgrade -y
          sudo apt-get install -y musl-tools
      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-unknown-linux-musl
          components: rustfmt, clippy
          override: true
      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v1
        with:
          sharedKey: dev-build-${{ matrix.service }}
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -p ${{ matrix.package }} ${{ env.CARGO_BUILD_ARGS }}
      - name: Prepare ${{ matrix.service }}
        run: |-
          mkdir -p ./services/${{ matrix.package }}/func/bin
          cp ./target/cargo/release/${{ matrix.package }} ./services/${{ matrix.package }}/func/bin/handler
          echo "\"${{ matrix.fa_name_var }}\""
      - name: Deploy ${{ matrix.service }}
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.FA_NAME }}
          package: ./services/${{ matrix.package }}/func
          publish-profile: ${{ env.FA_PUBLISH_PROFILE }}
